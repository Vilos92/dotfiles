services:
  # Tailscale services
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale
    hostname: greg-zone
    restart: unless-stopped
    volumes:
      - "tailscale-state:/var/lib/tailscale"
      - "/dev/net/tun:/dev/net/tun"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTH_KEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
    networks:
      - greg-zone-tailscale

  nginx-tailscale:
    image: nginx:alpine
    container_name: nginx-tailscale
    volumes:
      - "./docker/nginx/nginx-tailscale.conf:/etc/nginx/nginx.conf:ro"
      - "./docker/nginx/auth:/etc/nginx/auth:ro"
      - "./docker/nginx/index.html:/usr/share/nginx/html/index.html:ro"
    restart: unless-stopped
    depends_on:
      - copyparty
      - freshrss
      - kiwix
      - prometheus
      - grafana
    network_mode: service:tailscale

  # Cloudflare services
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    depends_on:
      - nginx-cloudflared
    command: tunnel --no-autoupdate run --token ${COPYPARTY_CLOUDFLARED_TOKEN}
    networks:
      - greg-zone-cloudflare
      - greg-zone-tailscale

  nginx-cloudflared:
    image: nginx:alpine
    container_name: nginx-cloudflared
    ports:
      - "9847:80"
    volumes:
      - "./docker/nginx/nginx-cloudflare.conf:/etc/nginx/nginx.conf:ro"
      - "./docker/nginx/auth:/etc/nginx/auth:ro"
    restart: unless-stopped
    depends_on:
      - copyparty
      - freshrss
      - kiwix
    networks:
      - greg-zone-cloudflare
      - greg-zone-tailscale

  # External services (accessible via Cloudflare)
  copyparty:
    image: copyparty/ac:latest
    container_name: copyparty
    ports:
      - "3923:3923"
    user: "1000"
    volumes:
      - "./docker/copyparty/copyparty.conf:/app/copyparty.conf:ro"
      - "/Volumes/Elements:/Volumes/Elements"
      - "/Users/greg.linscheid/Desktop/Mac Vault:/Volumes/Mac Vault"
    restart: unless-stopped
    command: ["--rproxy", "-1", "-c", "/app/copyparty.conf"]
    networks:
      - greg-zone-cloudflare
      - greg-zone-tailscale

  kiwix:
    image: ghcr.io/kiwix/kiwix-serve:latest
    container_name: kiwix
    ports:
      - "8473:8080"
    volumes:
      - "/Volumes/Elements/Local Vault/media/zim:/data"
    restart: unless-stopped
    command: '**/*.zim'
    networks:
      - greg-zone-cloudflare
      - greg-zone-tailscale

  freshrss:
    image: freshrss/freshrss:latest
    container_name: freshrss
    ports:
      - "49153:80"
    environment:
      - TZ=America/Los_Angeles
      - CRON_MIN=1,31
    volumes:
      - "/Users/greg.linscheid/Desktop/Mac Vault/Greg News/freshrss-data:/var/www/FreshRSS/data"
      - "/Users/greg.linscheid/Desktop/Mac Vault/Greg News/freshrss-extensions:/var/www/FreshRSS/extensions"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - greg-zone-cloudflare
      - greg-zone-tailscale

  # Internal services (Tailscale only)
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - USER=greg
      - PASS=${TRANSMISSION_PASSWORD}
    volumes:
      - "/Users/greg.linscheid/Desktop/Mac Vault/transmission-config:/config"
      - "/Volumes/Elements/Local Vault/torrent:/downloads"
    restart: unless-stopped
    networks:
      - greg-zone-tailscale

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: greg-zone-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - greg-zone-tailscale

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: greg-zone-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=greg
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning:ro
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - greg-zone-tailscale

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    hostname: greg-zone-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    logging:
      options:
        max-size: "10m"
        max-file: "2"
    networks:
      - greg-zone-tailscale

  docker-stats-exporter:
    build: ./docker/docker-stats-exporter
    container_name: docker-stats-exporter
    hostname: greg-zone-docker-stats
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - greg-zone-tailscale

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: greg-zone-cadvisor
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true
    devices:
      - /dev/kmsg
    command:
      - '--docker_only=true'
      - '--store_container_labels=true'
      - '--whitelisted_container_labels=name,image'
      - '--housekeeping_interval=10s'
      - '--max_housekeeping_interval=15s'
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - greg-zone-tailscale

networks:
  greg-zone-cloudflare:
    driver: bridge
  greg-zone-tailscale:
    driver: bridge

volumes:
  tailscale-state:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local