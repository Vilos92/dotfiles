#!/bin/sh

# ==============================================================================
#
#                            !!! IMPORTANT !!!
#
# This script performs a ONE-WAY MIRROR backup.
#
# The LaCie drives ("Lacie" and "LaCie Small") are the DESTINATION. They are
# intended to be an exact copy of the source files from the T7 drive.
#
# Data flows FROM:
#   - /Volumes/T7/Vaults/Local Vault/media/
#   - /Volumes/T7/Vaults/Cloud Vault/
#   - /Volumes/T7/Vaults/Mac Vault/
#
# Data flows TO:
#   - /Volumes/Lacie/
#   - /Volumes/LaCie Small/
#
# Because this script uses the --delete flag, any file that exists on the
# LaCie drives but NOT on the T7 drive will be PERMANENTLY DELETED from
# the LaCie drives during the sync.
#
# DO NOT STORE UNIQUE FILES IN THE LACIE DRIVE VAULTS.
#
# The only exception to this is the `Cold Local Vault`. These are permanently archived
# files that no longer add utility (they have been scrapped for parts).
#
# ==============================================================================

# --- üõ°Ô∏è Safety Check & Global Options ---
# This script is in DRY-RUN mode by default.
# Pass the --execute flag as the first argument to make real changes.
RSYNC_OPTS="-av --progress --delete" # Base options
if [ "$1" == "--execute" ]; then
    echo "‚úÖ --execute flag detected. Live backup mode engaged."
else
    echo "üõ°Ô∏è SAFE MODE: Running in simulation (dry-run) mode."
    RSYNC_OPTS="$RSYNC_OPTS --dry-run"
fi
echo "===================================================="


# --- Safety Checks ---
if [ ! -d "/Volumes/T7" ]; then
    echo "‚ùå ERROR: Samsung T7 drive not found at /Volumes/T7"
    echo "   Please ensure your Samsung T7 drive is connected and mounted"
    exit 1
fi

if [ ! -d "/Volumes/Lacie" ]; then
    echo "‚ùå ERROR: LaCie drive not found at /Volumes/Lacie"
    echo "   Please ensure your LaCie drive is connected and mounted"
    exit 1
fi

if [ ! -d "/Volumes/LaCie Small" ]; then
    echo "‚ùå ERROR: LaCie Small drive not found at /Volumes/LaCie Small"
    echo "   Please ensure your LaCie Small drive is connected and mounted"
    exit 1
fi

echo "‚úÖ Source Samsung T7 drive found: /Volumes/T7"
echo "‚úÖ Target LaCie drive found: /Volumes/Lacie"
echo "‚úÖ Target LaCie Small drive found: /Volumes/LaCie Small"
echo "===================================================="


# --- Stage 1: Local Vault Backup (T7 -> LaCie) ---
echo "‚ñ∂Ô∏è  Starting Stage 1: Local Vault Backup"
# --- Configuration for Stage 1 ---
LV_SOURCE_DRIVE="/Volumes/T7/Vaults/Local Vault/media"
LV_DEST_DRIVE="/Volumes/Lacie/Local Vault/media"
LV_DIRS_TO_SYNC=( "concerts" "audio books" "music" "zim" "software" )

# --- Logic for Stage 1 ---
for dir in "${LV_DIRS_TO_SYNC[@]}"; do
    SOURCE_PATH="$LV_SOURCE_DRIVE/$dir/"
    DEST_PATH="$LV_DEST_DRIVE/$dir/"
    if [ -d "$SOURCE_PATH" ]; then
        echo "üîÑ Syncing: $dir"
        rsync $RSYNC_OPTS "$SOURCE_PATH" "$DEST_PATH"
    else
        echo "‚ö†Ô∏è  Skipping, not found: $SOURCE_PATH"
    fi
done
echo "----------------------------------------------------"


# --- Stage 2: Cloud Vault Backup (T7 -> LaCie Small) ---
echo "‚ñ∂Ô∏è  Starting Stage 2: Cloud Vault Backup"
# --- Configuration for Stage 2 ---
CV_SOURCE_DRIVE="/Volumes/T7/Vaults/Cloud Vault"
CV_DEST_DRIVE="/Volumes/LaCie Small/Cloud Vault"
CV_DIRS_TO_SYNC=( "GoPro" "video renders" )

# --- Logic for Stage 2 ---
for dir in "${CV_DIRS_TO_SYNC[@]}"; do
    SOURCE_PATH="$CV_SOURCE_DRIVE/$dir/"
    DEST_PATH="$CV_DEST_DRIVE/$dir/"
    if [ -d "$SOURCE_PATH" ]; then
        echo "üîÑ Syncing: $dir"
        rsync $RSYNC_OPTS "$SOURCE_PATH" "$DEST_PATH"
    else
        echo "‚ö†Ô∏è  Skipping, not found: $SOURCE_PATH"
    fi
done
echo "----------------------------------------------------"


# --- Stage 3: Mac Vault Backup (T7 -> LaCie Small) ---
echo "‚ñ∂Ô∏è  Starting Stage 3: Mac Vault Backup"
# --- Configuration for Stage 3 ---
MV_SOURCE_BASE="/Volumes/T7/Vaults/Mac Vault"
MV_DEST_BASE="/Volumes/LaCie Small/Mac Vault"

# --- Logic for Stage 3 ---
echo "üîÑ Syncing: Entire Mac Vault"
rsync $RSYNC_OPTS "$MV_SOURCE_BASE/" "$MV_DEST_BASE/"
echo "----------------------------------------------------"

echo "‚úÖ All backup stages finished."
