#!/bin/sh

# --- Video Compression Script with Bitrate Control ---
# Usage: compress_video_hevc <input_file> [bitrate] [output_file]
#
# Arguments:
#   <input_file>     - The video file to compress.
#   [bitrate]        - Optional. The target video bitrate in 'k' or 'M'.
#                      (e.g., 2000k or 2M). Default is 2500k.
#   [output_file]    - Optional. Custom output filename.
#
# Note: Requires FFmpeg with videotoolbox support.

if [ -z "$1" ]; then
    echo "Usage: $0 <input_file> [bitrate] [output_file]"
    exit 1
fi

input_file="$1"
bitrate="${2:-5000k}"
output_file="${3:-${input_file%.*}.x265.mp4}"

# Get the size of the input file before compression
old_size=$(du -h "$input_file" | awk '{print $1}')
echo "Original file size: $old_size"
  
echo "Processing: '$input_file' -> '$output_file' (Bitrate: $bitrate)"
  
ffmpeg -i "$input_file" \
    -c:v hevc_videotoolbox \
    -b:v "$bitrate" \
    -tag:v hvc1 \
    -c:a copy \
    "$output_file"

# Get the size of the output file and calculate the difference
if [ -f "$output_file" ]; then
    new_size=$(du -h "$output_file" | awk '{print $1}')
    echo "New file size: $new_size"
else
    echo "Output file was not created."
fi

echo "Compression complete."
