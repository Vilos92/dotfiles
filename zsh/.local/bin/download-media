#!/bin/sh

if [ "$#" -lt 1 ]; then
    echo "Error: You must provide a video URL." >&2
    echo "Usage: $0 <video_url> [--audio] [--index] [--output <filename>]" >&2
    exit 1
fi

URL="$1"
DOWNLOAD_AUDIO=false
ADD_PLAYLIST_INDEX=false
MANUAL_OUTPUT_NAME=""

shift

while [ "$#" -gt 0 ]; do
    case "$1" in
        --audio)
            DOWNLOAD_AUDIO=true
            ;;
        --index)
            ADD_PLAYLIST_INDEX=true
            ;;
        --output)
            if [ -z "$2" ]; then
                echo "Error: --output requires a filename argument." >&2
                exit 1
            fi
            MANUAL_OUTPUT_NAME="$2"
            shift # Consume the filename argument.
            ;;
        *)
            # Stop parsing flags if an unrecognized argument is found.
            break
            ;;
    esac
    shift
done

# Run yt-dlp based on the flags.
if [ -n "$MANUAL_OUTPUT_NAME" ]; then
    if [ "$DOWNLOAD_AUDIO" = true ]; then
        yt-dlp -x --audio-format mp3 --audio-quality 0 --restrict-filenames --output "$MANUAL_OUTPUT_NAME" "$URL"
    else
        yt-dlp -f "bv*+ba/b" --remux-video mp4 --restrict-filenames --output "$MANUAL_OUTPUT_NAME" "$URL"
    fi
else
    OUTPUT_TEMPLATE="%(title)s.%(ext)s"
    if [ "$ADD_PLAYLIST_INDEX" = true ]; then
        OUTPUT_TEMPLATE="%(playlist_index)s - $OUTPUT_TEMPLATE"
    fi

    if [ "$DOWNLOAD_AUDIO" = true ]; then
        yt-dlp -x --audio-format mp3 --audio-quality 0 --restrict-filenames --output "$OUTPUT_TEMPLATE" "$URL"
    else
        yt-dlp -f "bv*+ba/b" --remux-video mp4 --restrict-filenames --output "$OUTPUT_TEMPLATE" "$URL"
    fi
fi
